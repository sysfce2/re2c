/* Generated by re2c 3.0 */
#line 1 "../src/codegen/syntax_lexer.re"
#include <stdint.h>

#include "src/codegen/syntax.h"
#include "src/codegen/syntax_parser.h"
#include "src/msg/msg.h"
#include "src/util/string_utils.h"

#line 20 "../src/codegen/syntax_lexer.re"


namespace re2c {

int StxFile::lex_token(YYSTYPE* yylval) {
    const uint8_t* YYMARKER, *p;
    
#line 19 "src/codegen/syntax_lexer.cc"
const uint8_t* yyt1;
#line 26 "../src/codegen/syntax_lexer.re"


start:
    tok = cur;

#line 27 "src/codegen/syntax_lexer.cc"
{
	uint8_t yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		  0, 160, 160, 160, 160, 160, 160, 160, 
		160, 164,   0, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		164, 160, 128, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 176, 176, 160, 
		184, 184, 184, 184, 184, 184, 184, 184, 
		184, 184, 160, 160, 160, 160, 160, 160, 
		160, 176, 176, 176, 176, 176, 176, 176, 
		176, 176, 176, 176, 176, 176, 176, 176, 
		176, 176, 176, 176, 176, 176, 176, 176, 
		176, 176, 176, 160, 192, 160, 160, 176, 
		160, 176, 176, 176, 176, 176, 176, 176, 
		176, 176, 176, 176, 176, 176, 176, 176, 
		176, 176, 176, 176, 176, 176, 176, 176, 
		176, 176, 176, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
	};
	yych = *cur;
	if (yybm[0+yych] & 4) {
		goto yy4;
	}
	if (yych <= '>') {
		if (yych <= ')') {
			if (yych <= '\n') {
				if (yych <= 0x00) goto yy1;
				if (yych <= 0x08) goto yy2;
				goto yy5;
			} else {
				if (yych == '"') goto yy6;
				if (yych <= '\'') goto yy2;
				goto yy7;
			}
		} else {
			if (yych <= '.') {
				if (yych <= '+') goto yy2;
				if (yych <= ',') goto yy7;
				if (yych <= '-') goto yy8;
				goto yy2;
			} else {
				if (yych <= '/') goto yy9;
				if (yych <= '9') goto yy10;
				if (yych <= ';') goto yy7;
				goto yy2;
			}
		}
	} else {
		if (yych <= '_') {
			if (yych <= '[') {
				if (yych <= '?') goto yy7;
				if (yych <= '@') goto yy2;
				if (yych <= 'Z') goto yy11;
				goto yy7;
			} else {
				if (yych == ']') goto yy7;
				if (yych <= '^') goto yy2;
				goto yy11;
			}
		} else {
			if (yych <= 'z') {
				if (yych <= '`') goto yy2;
				if (yych == 'c') goto yy14;
				goto yy11;
			} else {
				if (yych == '|') goto yy2;
				if (yych <= '}') goto yy7;
				goto yy2;
			}
		}
	}
yy1:
	++cur;
#line 31 "../src/codegen/syntax_lexer.re"
	{
        return YYEOF;
    }
#line 123 "src/codegen/syntax_lexer.cc"
yy2:
	++cur;
yy3:
#line 69 "../src/codegen/syntax_lexer.re"
	{
        msg.error(tok_loc(), "unexpected character: '%c'", cur[-1]);
        return YYerror;
    }
#line 132 "src/codegen/syntax_lexer.cc"
yy4:
	yych = *++cur;
	if (yybm[0+yych] & 4) {
		goto yy4;
	}
#line 39 "../src/codegen/syntax_lexer.re"
	{
        goto start;
    }
#line 142 "src/codegen/syntax_lexer.cc"
yy5:
	++cur;
#line 34 "../src/codegen/syntax_lexer.re"
	{
        ++loc.line;
        pos = cur;
        goto start;
    }
#line 151 "src/codegen/syntax_lexer.cc"
yy6:
	yyaccept = 0;
	yych = *(YYMARKER = ++cur);
	if (yych <= 0x00) goto yy3;
	if (yych == '\n') goto yy3;
	goto yy16;
yy7:
	++cur;
#line 66 "../src/codegen/syntax_lexer.re"
	{
        return cur[-1];
    }
#line 164 "src/codegen/syntax_lexer.cc"
yy8:
	yych = *++cur;
	if (yybm[0+yych] & 8) {
		goto yy10;
	}
	goto yy3;
yy9:
	yyaccept = 0;
	yych = *(YYMARKER = ++cur);
	if (yych == '/') goto yy21;
	goto yy3;
yy10:
	yych = *++cur;
	if (yybm[0+yych] & 8) {
		goto yy10;
	}
#line 54 "../src/codegen/syntax_lexer.re"
	{
        if (s_to_i32_unsafe(tok, cur, yylval->num)) {
            return STX_NUMBER;
        } else {
            msg.error(tok_loc(), "configuration value overflow");
            return YYerror;
        }
    }
#line 190 "src/codegen/syntax_lexer.cc"
yy11:
	yyaccept = 1;
	yych = *(YYMARKER = ++cur);
yy12:
	if (yybm[0+yych] & 16) {
		goto yy11;
	}
	if (yych <= 0x1F) {
		if (yych == '\t') {
			yyt1 = cur;
			goto yy22;
		}
	} else {
		if (yych <= ' ') {
			yyt1 = cur;
			goto yy22;
		}
		if (yych == '=') {
			yyt1 = cur;
			goto yy23;
		}
	}
yy13:
#line 50 "../src/codegen/syntax_lexer.re"
	{
        yylval->str = newcstr(tok, cur, alc);
        return STX_NAME;
    }
#line 219 "src/codegen/syntax_lexer.cc"
yy14:
	yyaccept = 1;
	yych = *(YYMARKER = ++cur);
	if (yych == 'o') goto yy24;
	goto yy12;
yy15:
	yych = *++cur;
yy16:
	if (yybm[0+yych] & 32) {
		goto yy15;
	}
	if (yych <= '\n') goto yy17;
	if (yych <= '"') goto yy18;
	goto yy20;
yy17:
	cur = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy3;
		} else {
			goto yy13;
		}
	} else {
		goto yy19;
	}
yy18:
	++cur;
yy19:
#line 62 "../src/codegen/syntax_lexer.re"
	{
        yylval->str = newcstr(tok + 1, cur - 1, alc);
        return STX_STRING;
    }
#line 253 "src/codegen/syntax_lexer.cc"
yy20:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy15;
	}
	if (yych <= '\n') goto yy17;
	if (yych <= '"') goto yy25;
	goto yy20;
yy21:
	yych = *++cur;
	if (yybm[0+yych] & 128) {
		goto yy21;
	}
	if (yych <= 0x00) goto yy17;
	goto yy5;
yy22:
	yych = *++cur;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy22;
		goto yy17;
	} else {
		if (yych <= ' ') goto yy22;
		if (yych != '=') goto yy17;
	}
yy23:
	++cur;
	p = yyt1;
#line 46 "../src/codegen/syntax_lexer.re"
	{
        yylval->str = newcstr(tok, p, alc);
        return STX_CONF;
    }
#line 286 "src/codegen/syntax_lexer.cc"
yy24:
	yyaccept = 1;
	yych = *(YYMARKER = ++cur);
	if (yych == 'd') goto yy26;
	goto yy12;
yy25:
	yyaccept = 2;
	yych = *(YYMARKER = ++cur);
	if (yybm[0+yych] & 32) {
		goto yy15;
	}
	if (yych <= '\n') goto yy19;
	if (yych <= '"') goto yy18;
	goto yy20;
yy26:
	yyaccept = 1;
	yych = *(YYMARKER = ++cur);
	if (yych != 'e') goto yy12;
	yyaccept = 1;
	yych = *(YYMARKER = ++cur);
	if (yych != ':') goto yy12;
	yych = *++cur;
	if (yych <= '^') {
		if (yych <= '@') goto yy17;
		if (yych >= '[') goto yy17;
	} else {
		if (yych == '`') goto yy17;
		if (yych >= '{') goto yy17;
	}
yy27:
	yych = *++cur;
	if (yych <= '9') {
		if (yych <= ' ') {
			if (yych == '\t') {
				yyt1 = cur;
				goto yy28;
			}
			if (yych <= 0x1F) goto yy17;
			yyt1 = cur;
		} else {
			if (yych <= ',') goto yy17;
			if (yych == '/') goto yy17;
			goto yy27;
		}
	} else {
		if (yych <= 'Z') {
			if (yych == '=') {
				yyt1 = cur;
				goto yy29;
			}
			if (yych <= '@') goto yy17;
			goto yy27;
		} else {
			if (yych <= '_') {
				if (yych <= '^') goto yy17;
				goto yy27;
			} else {
				if (yych <= '`') goto yy17;
				if (yych <= 'z') goto yy27;
				goto yy17;
			}
		}
	}
yy28:
	yych = *++cur;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy28;
		goto yy17;
	} else {
		if (yych <= ' ') goto yy28;
		if (yych != '=') goto yy17;
	}
yy29:
	++cur;
	p = yyt1;
#line 42 "../src/codegen/syntax_lexer.re"
	{
        yylval->str = newcstr(tok, p, alc);
        return STX_CONF_CODE;
    }
#line 367 "src/codegen/syntax_lexer.cc"
}
#line 73 "../src/codegen/syntax_lexer.re"


    return YYerror; // unreachable
}

} // namespace re2c
